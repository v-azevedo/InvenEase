// <auto-generated />
using System;
using InvenEase.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace InvenEase.Infrastructure.Migrations
{
    [DbContext(typeof(InvenEaseDbContext))]
    [Migration("20240731185437_UpdateRequestsNames")]
    partial class UpdateRequestsNames
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("InvenEase.Domain.ItemAggregate.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MinimumQuantity")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("InvenEase.Domain.RequisitionAggregate.Requisition", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("RequesterDelivered")
                        .HasColumnType("boolean");

                    b.Property<Guid>("RequesterId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("StockistId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("UpdatedDateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Urgency")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Requisitions", (string)null);
                });

            modelBuilder.Entity("InvenEase.Domain.UserAggregate.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("InvenEase.Domain.ItemAggregate.Item", b =>
                {
                    b.OwnsMany("InvenEase.Domain.OrderAggregate.ValueObjects.OrderId", "OrderIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer");

                            b1.Property<Guid>("ItemId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("OrderId");

                            b1.HasKey("Id");

                            b1.HasIndex("ItemId");

                            b1.ToTable("ItemOrderIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ItemId");
                        });

                    b.OwnsOne("InvenEase.Domain.ObjectAggregate.ValueObjects.Dimensions", "Dimensions", b1 =>
                        {
                            b1.Property<Guid>("ItemId")
                                .HasColumnType("uuid");

                            b1.Property<double>("Height")
                                .HasColumnType("double precision");

                            b1.Property<double>("Length")
                                .HasColumnType("double precision");

                            b1.Property<double>("Weight")
                                .HasColumnType("double precision");

                            b1.Property<double>("Width")
                                .HasColumnType("double precision");

                            b1.HasKey("ItemId");

                            b1.ToTable("Items");

                            b1.WithOwner()
                                .HasForeignKey("ItemId");
                        });

                    b.OwnsMany("InvenEase.Domain.RequisitionAggregate.ValueObjects.RequisitionId", "RequisitionIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer");

                            b1.Property<Guid>("ItemId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("RequisitionId");

                            b1.HasKey("Id");

                            b1.HasIndex("ItemId");

                            b1.ToTable("ItemRequisitionIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ItemId");
                        });

                    b.Navigation("Dimensions")
                        .IsRequired();

                    b.Navigation("OrderIds");

                    b.Navigation("RequisitionIds");
                });

            modelBuilder.Entity("InvenEase.Domain.RequisitionAggregate.Requisition", b =>
                {
                    b.OwnsMany("InvenEase.Domain.RequisitionAggregate.Entities.RequisitionItem", "Items", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uuid")
                                .HasColumnName("RequisitionItemId");

                            b1.Property<Guid>("RequisitionId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("ItemId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Quantity")
                                .HasColumnType("integer");

                            b1.HasKey("Id", "RequisitionId");

                            b1.HasIndex("RequisitionId");

                            b1.ToTable("RequisitionItems", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RequisitionId");
                        });

                    b.OwnsMany("InvenEase.Domain.OrderAggregate.ValueObjects.OrderId", "OrderIds", b1 =>
                        {
                            b1.Property<int>("Id")
                                .HasColumnType("integer");

                            b1.Property<Guid>("RequisitionId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("Value")
                                .HasColumnType("uuid")
                                .HasColumnName("OrderId");

                            b1.HasKey("Id");

                            b1.HasIndex("RequisitionId");

                            b1.ToTable("RequisitionOrderIds", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RequisitionId");
                        });

                    b.Navigation("Items");

                    b.Navigation("OrderIds");
                });

            modelBuilder.Entity("InvenEase.Domain.UserAggregate.User", b =>
                {
                    b.OwnsMany("InvenEase.Domain.UserAggregate.ValueObjects.Permission", "Permissions", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasAnnotation("Key", 0);

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Permission");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("Permissions", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsMany("InvenEase.Domain.UserAggregate.ValueObjects.Role", "Roles", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .HasColumnType("int")
                                .HasAnnotation("Key", 0);

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("Role");

                            b1.HasKey("UserId", "Id");

                            b1.ToTable("Roles", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Permissions");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
